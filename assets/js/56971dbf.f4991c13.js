"use strict";(self.webpackChunkapp_docs=self.webpackChunkapp_docs||[]).push([[4881],{3800:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"protocol/ai-ecosystem","title":"AI Ecosystem","description":"Overview of the AI Ecosystem","source":"@site/docs/protocol/02-ai-ecosystem.mdx","sourceDirName":"protocol","slug":"/protocol/ai-ecosystem","permalink":"/docs/protocol/ai-ecosystem","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"description":"Overview of the AI Ecosystem"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/docs/protocol/"},"next":{"title":"Protocol Features","permalink":"/docs/protocol/features"}}');var s=n(4848),i=n(8453);const r={sidebar_position:2,description:"Overview of the AI Ecosystem"},a="AI Ecosystem",c={},l=[{value:"Helping to AI Builders to focus on the AI",id:"helping-to-ai-builders-to-focus-on-the-ai",level:2},{value:"Agents interaction and execution is tough",id:"agents-interaction-and-execution-is-tough",level:2}];function d(e){const t={h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"ai-ecosystem",children:"AI Ecosystem"})}),"\n",(0,s.jsx)(t.p,{children:"The AI Agent ecosystem, is composed of different actors:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"AI Builders"})," and/or AI Organizations. Who create software packaged as AI agents. AI Agents can be very different depending on their implementation.\nSo from simple to complex pieces of code that depend on the type of interaction they perform for a user. Requiring some kind of human interaction or being fully autonomous.\nWe can differentiate them as:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Single AI builders"}),". Who create stand-alone agents that they want to monetize."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"AI multi-agent system builders"}),". Who create complex agents which interact with other external agents."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Users"}),". Actors who will consume the services of one or many AI agents. They can either be AI Builders creating an App that integrates otherAI Agents and/or final users interacting with agents directly."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"AI Agents"}),". These are an amalgamation of the above two actors, which are artificial or synthetic in nature, performing the functions of an AI Builder and / or User."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Protocol Users",src:n(3771).A+"",width:"960",height:"540"})}),"\n",(0,s.jsx)(t.h2,{id:"helping-to-ai-builders-to-focus-on-the-ai",children:"Helping to AI Builders to focus on the AI"}),"\n",(0,s.jsx)(t.p,{children:"From a AI builder point of view, making an AI agent available requires some additional standard steps,beyond the pure AI tasks (model creation, testing, tuning, LLM integration, etc):"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Define how the agent is gonna be used. Define the interface, messages, flows, etc. Implement that."}),"\n",(0,s.jsx)(t.li,{children:"Implement some mechanism to receive payments. Confirm that the payment went through, deal with claims, credit card frauds, etc."}),"\n",(0,s.jsx)(t.li,{children:"Implement access control for the agent. Once the agent is online we don\u2019t want everyone on the internet using the agent."}),"\n",(0,s.jsx)(t.li,{children:"Implement some kind of authorization, so users depending on what they paid or their profile can access some resources or others."}),"\n",(0,s.jsx)(t.li,{children:"Implement some mechanism to control the number of requests to process. We want to avoid our agent being spammed or individual users consumingall the agent\u2019s resources."}),"\n",(0,s.jsx)(t.li,{children:"Execute the agent and the above code in a public online environment connected to the internet 24x7. Monitor that everything works."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"That\u2019s a lot of complexity, architecture decisions, time and effort. All of this means an investment over and above the AI itself."}),"\n",(0,s.jsx)(t.h2,{id:"agents-interaction-and-execution-is-tough",children:"Agents interaction and execution is tough"}),"\n",(0,s.jsx)(t.p,{children:"Once AI Agents are built and online, builders face another problem. AI Agents need to be able to interact with each other to accomplish complex tasks. Currently there is no standard or protocol that allows agents to:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Discover other agents. Agents need to be able to discover other existing agents and understand what services other agents provide. All the metadata provided could be used to make an informed decision (human or not) about using a different agent."}),"\n",(0,s.jsx)(t.li,{children:"Transact/Purchase access to the service provided by another agent. Currently there is not an efficient and standard way to do it. Do we use fiat? Crypto? Do I need to pay per request?"}),"\n",(0,s.jsx)(t.li,{children:"Ask/Query another agent. Even when an agent purchased access to the service delivered by another agent, that API can be exposed in different ways, how can an agent integrate that?"}),"\n",(0,s.jsx)(t.li,{children:"How can an agent provide a service to  another account for the usage? What if the other agent makes a lot of requests? Or if these requests are very complex and spend too many LLM tokens?"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},3771:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/protocol_users-91fe20c42ad34a14d6a3ae4dff64bf44.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);