"use strict";(self.webpackChunkapp_docs=self.webpackChunkapp_docs||[]).push([[2614],{2756:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var a=t(4164);const r={tabItem:"tabItem_Ymn6"};var i=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,s),hidden:t,children:n})}},7242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"integration/registration","title":"How to register Payment Plans and Agents?","description":"How AI Builders can register Payment Plans and Agents?","source":"@site/docs/integration/03-registration.md","sourceDirName":"integration","slug":"/integration/registration","permalink":"/docs/integration/registration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"How AI Builders can register Payment Plans and Agents?"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/integration/getting-started"},"next":{"title":"How users can purchase Payment Plans?","permalink":"/docs/integration/order-plans"}}');var r=t(4848),i=t(8453),s=t(8528),l=t(2756);const o={sidebar_position:3,description:"How AI Builders can register Payment Plans and Agents?"},d="How to register Payment Plans and Agents?",c={},p=[{value:"Creating a Payment Plan",id:"creating-a-payment-plan",level:2},{value:"Registering a Credit-Based Payment Plan",id:"registering-a-credit-based-payment-plan",level:3},{value:"Creating a Time-Based Payment Plan",id:"creating-a-time-based-payment-plan",level:3},{value:"Registering a Trial Plan",id:"registering-a-trial-plan",level:3},{value:"Registering an AI Agent",id:"registering-an-ai-agent",level:3},{value:"Creating a Credit-Based Payment Plan and an AI Agent in one step",id:"creating-a-credit-based-payment-plan-and-an-ai-agent-in-one-step",level:3}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"how-to-register-payment-plans-and-agents",children:"How to register Payment Plans and Agents?"})}),"\n",(0,r.jsx)(n.p,{children:"Once you have a Payments instance, you can start registering Payment Plans and AI Agents."}),"\n",(0,r.jsx)(n.h2,{id:"creating-a-payment-plan",children:"Creating a Payment Plan"}),"\n",(0,r.jsx)(n.p,{children:"Payment Plans give AI Builders the ability to control how and when users can use an AI agent or service. They are entirely controlled and managed by the AI Builder that creates them with no interference from Nevermined."}),"\n",(0,r.jsx)(n.p,{children:"Nevermined Payment Plans enable the setup of time-based or request-based gating of a Builder's AI."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Request-Based or Credits-Based"}),": Provides user access with request-gating. Builders can manage the number of requests a user can make to access their AI service. This is done by setting the number of credits required to make a request to the AI service/app when adding that service to a Payment Plan. Each time a request is made, Nevermined will redeem the specified number of credits. If the user does not have enough credits, they will be prompted to purchase more and denied access until they do."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time-Based"}),": Provides user access with time-gating. Builders can set the time period that a user is allowed access to the AI (e.g., 1 year, 1 month, 1 week, 1 day, 1 hour, etc.). When a user makes a request, the corresponding access credit is redeemed, granting access for the designated period. Once the time period has elapsed, the user will no longer have access and will need to redeem another credit for continued access."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"registering-a-credit-based-payment-plan",children:"Registering a Credit-Based Payment Plan"}),"\n",(0,r.jsxs)(s.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"TypeScript",value:"typescript"}],children:[(0,r.jsx)(l.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# This is the USDC ERC20 address in the test network (sandbox)\nUSDC_ERC20_TESTING = "0x036CbD53842c5426634e7929541eC2318f3dCF7e"\n\n# Plan metadata\nplan_metadata = PlanMetadata(\n    name="My Credits Plan",\n    tags=["test"]\n)\n\n# The price is 20 USDC (20_000_000) in the sandbox network\nprice_config = get_erc20_price_config(20_000_000, USDC_ERC20_TESTING, builder_address)\n# The subscriber receives 100 credits upon purchasing the plan\ncredits_config = get_fixed_credits_config(100)\n\n# Register the plan\nresponse = payments_builder.plans.register_credits_plan(\n    plan_metadata,\n    price_config,\n    credits_config\n)\nplan_id = response.get("planId")\n'})})}),(0,r.jsx)(l.A,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const USDC_ERC20_TESTING = '0x036CbD53842c5426634e7929541eC2318f3dCF7e' // This is the USDC ERC20 address in the test network (sandbox)\n\nconst planMetadata = {\n  name: 'My Credits Plan',\n  tags: ['test']\n}\n\n// The price is 20 USDC (20_000_000) in the sandbox network\nconst priceConfig = getERC20PriceConfig(20_000_000n, USDC_ERC20_TESTING, builderAddress)\n// The subscriber receives 100 credits upon purchasing the plan\nconst creditsConfig = getFixedCreditsConfig(100n)\n// Register the plan\nconst { planId } = await payments.plans.registerCreditsPlan(\n  planMetadata, \n  priceConfig, \n  creditsConfig\n)\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-time-based-payment-plan",children:"Creating a Time-Based Payment Plan"}),"\n",(0,r.jsxs)(s.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"TypeScript",value:"typescript"}],children:[(0,r.jsx)(l.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# The price is 5 USDC (5_000_000) in the sandbox network\nprice_config = get_erc20_price_config(5_000_000, ERC20_ADDRESS, builder_address)\n# The plan is valid for 1 day\none_day_plan_config = get_expirable_duration_config(ONE_DAY_DURATION)\n# Register the plan\nresponse = payments_builder.plans.register_time_plan(\n    plan_metadata,\n    price_config,\n    one_day_plan_config\n)\nplan_id = response.get("planId")\n'})})}),(0,r.jsx)(l.A,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// The price is 5 USDC (5_000_000) in the sandbox network\nconst priceConfig = getERC20PriceConfig(5_000_000n, ERC20_ADDRESS, builderAddress)\n// The plan is valid for 1 day\nconst oneDayPlanConfig = getExpirableDurationConfig(ONE_DAY_DURATION)\n// Register the plan\nconst { planId } = await payments.plans.registerTimePlan(\n  planMetadata, \n  priceConfig, \n  oneDayPlanConfig\n)\n\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"registering-a-trial-plan",children:"Registering a Trial Plan"}),"\n",(0,r.jsx)(n.p,{children:"A Trial Plan is a special type of Payment Plan that allows users to try out an AI Agent for a limited time (typically for free). A Trial Plan can only be obtained once by each user."}),"\n",(0,r.jsxs)(s.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"TypeScript",value:"typescript"}],children:[(0,r.jsx)(l.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Plan metadata for the trial plan\ntrial_plan_metadata = PlanMetadata(\n    name="Try it for one day before you buy it"\n)\n\n# The price is free\nfree_config = get_free_price_config()\n# The plan is valid for 1 day\none_day_plan_config = get_expirable_duration_config(ONE_DAY_DURATION)\n# Register the trial plan\nresponse = payments_builder.plans.register_time_trial_plan(\n    trial_plan_metadata,\n    free_config,\n    one_day_plan_config\n)\nplan_id = response.get("planId")\n'})})}),(0,r.jsx)(l.A,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const trialPlanMetadata: PlanMetadata = {\n  name: 'Try it for one day before you buy it',\n}\n// The price is free\nconst freeConfig = getFreePriceConfig()\n// The plan is valid for 1 day\nconst oneDayPlanConfig = getExpirableDurationConfig(ONE_DAY_DURATION)\n// Register the trial plan\nconst { planId } = await payments.plans.registerTimeTrialPlan(\n  trialPlanMetadata, \n  freeConfig, \n  oneDayPlanConfig\n)\n\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"registering-an-ai-agent",children:"Registering an AI Agent"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Before registering an AI Agent, you need to have a Payment Plan created."})}),"\n",(0,r.jsxs)(s.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"TypeScript",value:"typescript"}],children:[(0,r.jsx)(l.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# When you create an agent, you need to provide the endpoints that the agent exposes and are protected by the Payment Plan\n# You must specify the HTTP method and the URL pattern that the agent exposes\n# You can use wildcards (like :agentId in the example) to match any string\n# See more information about the wildcards supported here: https://github.com/pillarjs/path-to-regexp\n\nfrom datetime import datetime\n\nagent_metadata = {\n    "name": "E2E Payments Agent",\n    "tags": ["test"],\n    "dateCreated": datetime.now().isoformat(),\n    "description": "Description for the E2E Payments Agent"\n}\nagent_api = {\n    "endpoints": [\n        {"POST": "https://example.com/api/v1/agents/:agentId/tasks"},\n        {"GET": "https://example.com/api/v1/agents/:agentId/tasks/invoke"}\n    ],\n    "openEndpoints": ["https://example.com/api/v1/rest/docs-json"]\n}\npayment_plans = [credits_plan_id, expirable_plan_id]\n\nresponse = payments_builder.agents.register_agent(\n    agent_metadata,\n    agent_api,\n    payment_plans\n)\nagent_id = response.get("agentId")\n'})})}),(0,r.jsx)(l.A,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// When you create an agent, you need to provide the endpoints that the agent exposes and are protected by the Payment Plan\n// You must specify the HTTP method and the URL pattern that the agent exposes\n// You can use wildcards (like :agentId in the example) to match any string\n// See more information about the wildcards supported here: https://github.com/pillarjs/path-to-regexp\n\nconst agentMetadata: AgentMetadata = {\n  name: 'E2E Payments Agent',\n  tags: ['test'],\n  dateCreated: new Date(),\n  description: 'Description for the E2E Payments Agent'\n}\nconst agentApi = {\n  endpoints: [\n    { 'POST': 'https://example.com/api/v1/agents/:agentId/tasks' },\n    { 'GET': 'https://example.com/api/v1/agents/:agentId/tasks/invoke' }\n  ],\n  openEndpoints: ['https://example.com/api/v1/rest/docs-json']\n}\nconst paymentPlans = [creditsPlanId, expirablePlanId]\n\nconst { agentId } = await payments.agents.registerAgent(\n  agentMetadata, \n  agentApi, \n  paymentPlans\n)\n\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-credit-based-payment-plan-and-an-ai-agent-in-one-step",children:"Creating a Credit-Based Payment Plan and an AI Agent in one step"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"This method allows you to create the plan and attach the agent to it in one step."})}),"\n",(0,r.jsxs)(s.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"TypeScript",value:"typescript"}],children:[(0,r.jsx)(l.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Agent metadata and API definition\nagent_metadata = {\n    "name": "My AI Payments Agent",\n    "tags": ["test2"],\n    "description": "Description for my AI Payments Agent"\n}\nagent_api = {\n    "endpoints": [\n        {"POST": "http://example.com/test/:agentId/tasks"}\n    ]\n}\n\n# The price is 500 native tokens\ncrypto_price_config = get_native_token_price_config(500, builder_address)\n# Non expirable payment plan\nnon_expirable_config = get_non_expirable_duration_config()\n\nresponse = payments_builder.agents.register_agent_and_plan(\n    agent_metadata,\n    agent_api,\n    plan_metadata,\n    crypto_price_config,\n    non_expirable_config\n)\nagent_id = response.get("agentId")\nplan_id = response.get("planId")\nprint(\'Plan created\', response.planDID)\nprint(\'Agent attached\', response.agentDID)\n'})})}),(0,r.jsx)(l.A,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const agentMetadata = { \n  name: 'My AI Payments Agent', \n  tags: ['test2'], \n  description: 'Description for my AI Payments Agent' \n}\nconst agentApi = { endpoints: [{ 'POST': 'http://example.com/test/:agentId/tasks' }] }\n\nconst cryptoPriceConfig = getNativeTokenPriceConfig(500n, builderAddress)\n// Non expirable payment plan\nconst nonExpirableConfig = getNonExpirableDurationConfig()\n\nconst { agentId, planId } = await paymentsBuilder.agents.registerAgentAndPlan(\n  agentMetadata,\n  agentApi,\n  planMetadata,\n  cryptoPriceConfig,\n  nonExpirableConfig,\n)\n"})})})]})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var a=t(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}},8528:(e,n,t)=>{t.d(n,{A:()=>P});var a=t(6540),r=t(4164),i=t(5627),s=t(6347),l=t(372),o=t(604),d=t(1861),c=t(8749);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=u(e),[s,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[d,p]=h({queryString:t,groupId:r}),[m,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,i]=(0,c.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),f=(()=>{const e=d??m;return g({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{f&&o(f)}),[f]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!g({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),y(e)}),[p,y,i]),tabValues:i}}var y=t(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var _=t(4848);function b(e){let{className:n,block:t,selectedValue:a,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),r=l[t].value;r!==a&&(d(n),s(r))},p=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,_.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,_.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{o.push(e)},onKeyDown:p,onClick:c,...i,className:(0,r.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:i}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,_.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=m(e);return(0,_.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,_.jsx)(b,{...n,...e}),(0,_.jsx)(x,{...n,...e})]})}function P(e){const n=(0,y.A)();return(0,_.jsx)(v,{...e,children:p(e.children)},String(n))}}}]);